name: Daily NFL Transaction Scraper

on:
  workflow_dispatch:

jobs:
  scrape-nfl-transactions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        pip install requests beautifulsoup4 pandas

    - name: Test Spotrac Connection
      run: |
        python -c "
        import requests
        from bs4 import BeautifulSoup
        
        print('üèà Testing Spotrac connection...')
        
        try:
            url = 'https://www.spotrac.com/nfl/transactions'
            headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'}
            response = requests.get(url, headers=headers, timeout=30)
            
            print(f'Status Code: {response.status_code}')
            print(f'Content Length: {len(response.text)}')
            
            if 'transaction' in response.text.lower():
                print('‚úÖ Found transaction data on Spotrac!')
            else:
                print('‚ö†Ô∏è No transaction data found')
                
        except Exception as e:
            print(f'‚ùå Error: {e}')
        "

    - name: Test Airtable Connection
      env:
        AIRTABLE_ACCESS_TOKEN: ${{ secrets.AIRTABLE_ACCESS_TOKEN }}
        AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
      run: |
        python -c "
        import requests
        import os
        from datetime import datetime
        
        print('üîó Testing Airtable connection...')
        
        token = os.getenv('AIRTABLE_ACCESS_TOKEN', '')
        base_id = os.getenv('AIRTABLE_BASE_ID', '')
        table_name = os.getenv('AIRTABLE_TABLE_NAME', '')
        
        print(f'Token exists: {bool(token)}')
        print(f'Base ID exists: {bool(base_id)}')
        print(f'Table name exists: {bool(table_name)}')
        
        if token and base_id and table_name:
            url = f'https://api.airtable.com/v0/{base_id}/{table_name}'
            headers = {
                'Authorization': f'Bearer {token}',
                'Content-Type': 'application/json'
            }
            
            test_data = {
                'fields': {
                    'Date': '2025-01-03',
                    'Type': 'Test',
                    'Team': 'GitHub Actions',
                    'Player': 'Connection Test',
                    'Description': 'Testing workflow connection to Airtable',
                    'Transaction ID': f'TEST_{datetime.now().strftime(\"%Y%m%d%H%M\")}',
                    'Source': 'Workflow Test'
                }
            }
            
            try:
                response = requests.post(url, json=test_data, headers=headers)
                if response.status_code == 200:
                    print('‚úÖ Successfully added test record to Airtable!')
                else:
                    print(f'‚ùå Airtable error: {response.status_code} - {response.text}')
            except Exception as e:
                print(f'‚ùå Airtable connection error: {e}')
        else:
            print('‚ùå Missing Airtable credentials')
        "
